{
  "definitions": {
    "AnyPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyType"
        },
        {
          "description": "Represents an any value which allows any kind of value",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "ArrayDefinitionType": {
      "allOf": [
        {
          "$ref": "#/definitions/CollectionDefinitionType"
        },
        {
          "description": "Represents an array which contains a dynamic list of values",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "ArrayPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/CollectionPropertyType"
        },
        {
          "description": "Represents an array which contains a dynamic list of values",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "BooleanPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/ScalarPropertyType"
        },
        {
          "description": "Represents a boolean value",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "CollectionDefinitionType": {
      "allOf": [
        {
          "$ref": "#/definitions/DefinitionType"
        },
        {
          "description": "Base type for the map and array collection type",
          "type": "object",
          "base": true,
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "schema": {
              "$ref": "#/definitions/PropertyType"
            }
          },
          "discriminator": "type",
          "mapping": {
            "MapDefinitionType": "map",
            "ArrayDefinitionType": "array"
          }
        }
      ]
    },
    "CollectionPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyType"
        },
        {
          "description": "Base collection property type",
          "type": "object",
          "base": true,
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "schema": {
              "$ref": "#/definitions/PropertyType"
            }
          },
          "discriminator": "type",
          "mapping": {
            "MapPropertyType": "map",
            "ArrayPropertyType": "array"
          }
        }
      ]
    },
    "DefinitionType": {
      "description": "Base definition type",
      "type": "object",
      "base": true,
      "properties": {
        "description": {
          "description": "",
          "type": "string"
        },
        "deprecated": {
          "description": "",
          "type": "boolean"
        },
        "type": {
          "description": "",
          "type": "string"
        }
      },
      "discriminator": "type",
      "mapping": {
        "StructDefinitionType": "struct",
        "MapDefinitionType": "map",
        "ArrayDefinitionType": "array"
      }
    },
    "GenericPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyType"
        },
        {
          "description": "Represents a generic value which can be replaced with a dynamic type",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "name": {
              "description": "The generic name, it is recommended to use typical generics names like T or TValue",
              "type": "string"
            }
          }
        }
      ]
    },
    "IntegerPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/ScalarPropertyType"
        },
        {
          "description": "Represents an integer value",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "MapDefinitionType": {
      "allOf": [
        {
          "$ref": "#/definitions/CollectionDefinitionType"
        },
        {
          "description": "Represents a map which contains a dynamic set of key value entries",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "MapPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/CollectionPropertyType"
        },
        {
          "description": "Represents a map which contains a dynamic set of key value entries",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "NumberPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/ScalarPropertyType"
        },
        {
          "description": "Represents a float value",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "PropertyType": {
      "description": "Base property type",
      "type": "object",
      "base": true,
      "properties": {
        "description": {
          "description": "",
          "type": "string"
        },
        "deprecated": {
          "description": "",
          "type": "boolean"
        },
        "type": {
          "description": "",
          "type": "string"
        },
        "nullable": {
          "description": "",
          "type": "boolean"
        }
      },
      "discriminator": "type",
      "mapping": {
        "IntegerPropertyType": "integer",
        "NumberPropertyType": "number",
        "StringPropertyType": "string",
        "BooleanPropertyType": "boolean",
        "MapPropertyType": "map",
        "ArrayPropertyType": "array",
        "AnyPropertyType": "any",
        "GenericPropertyType": "generic",
        "ReferencePropertyType": "reference"
      }
    },
    "ReferencePropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyType"
        },
        {
          "description": "Represents a reference to a definition type",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "target": {
              "description": "Name of the target reference, must a key from the definitions map",
              "type": "string"
            }
          }
        }
      ]
    },
    "ScalarPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/PropertyType"
        },
        {
          "description": "Base scalar property type",
          "type": "object",
          "base": true,
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          },
          "discriminator": "type",
          "mapping": {
            "IntegerPropertyType": "integer",
            "NumberPropertyType": "number",
            "StringPropertyType": "string",
            "BooleanPropertyType": "boolean"
          }
        }
      ]
    },
    "Specification": {
      "description": "",
      "type": "object",
      "properties": {
        "import": {
          "description": "",
          "type": "map",
          "additionalProperties": {
            "type": "string"
          }
        },
        "definitions": {
          "description": "",
          "type": "map",
          "additionalProperties": {
            "$ref": "#/definitions/DefinitionType"
          }
        },
        "root": {
          "description": "",
          "type": "string"
        }
      }
    },
    "StringPropertyType": {
      "allOf": [
        {
          "$ref": "#/definitions/ScalarPropertyType"
        },
        {
          "description": "Represents a string value",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "format": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "StructDefinitionType": {
      "allOf": [
        {
          "$ref": "#/definitions/DefinitionType"
        },
        {
          "description": "Represents a struct which contains a fixed set of defined properties",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "parent": {
              "description": "The parent type of this struct. The struct inherits all properties from the parent type",
              "type": "string"
            },
            "base": {
              "description": "Indicates that this struct is a base type, this means it is an abstract type which is used by different types as parent",
              "type": "boolean"
            },
            "properties": {
              "description": "",
              "type": "map",
              "additionalProperties": {
                "$ref": "#/definitions/PropertyType"
              }
            },
            "discriminator": {
              "description": "In case this is a base type it is possible to specify a discriminator property",
              "type": "string"
            },
            "mapping": {
              "description": "In case a discriminator property was set it is possible to specify a mapping. The key is the type name and the value the concrete value which is mapped to the type",
              "type": "map",
              "additionalProperties": {
                "type": "string"
              }
            },
            "template": {
              "description": "In case the parent type contains generics it is possible to set a concrete type for each generic type",
              "type": "map",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    }
  },
  "description": "",
  "type": "object",
  "properties": {
    "import": {
      "description": "",
      "type": "map",
      "additionalProperties": {
        "type": "string"
      }
    },
    "definitions": {
      "description": "",
      "type": "map",
      "additionalProperties": {
        "$ref": "#/definitions/DefinitionType"
      }
    },
    "root": {
      "description": "",
      "type": "string"
    }
  }
}