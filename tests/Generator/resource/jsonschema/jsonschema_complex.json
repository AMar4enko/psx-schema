{
  "definitions": {
    "AnyType": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonType"
        },
        {
          "description": "Represents an any type",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "ArrayType": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonType"
        },
        {
          "description": "Represents an array type. An array type contains an ordered list of a specific type",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "items": {
              "description": "",
              "oneOf": [
                {
                  "$ref": "#/definitions/BooleanType"
                },
                {
                  "$ref": "#/definitions/NumberType"
                },
                {
                  "$ref": "#/definitions/StringType"
                },
                {
                  "$ref": "#/definitions/ReferenceType"
                },
                {
                  "$ref": "#/definitions/GenericType"
                },
                {
                  "$ref": "#/definitions/AnyType"
                }
              ]
            },
            "maxItems": {
              "description": "Positive integer value",
              "type": "integer"
            },
            "minItems": {
              "description": "Positive integer value",
              "type": "integer"
            }
          }
        }
      ]
    },
    "BooleanType": {
      "allOf": [
        {
          "$ref": "#/definitions/ScalarType"
        },
        {
          "description": "Represents a boolean type",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "CommonType": {
      "description": "Represents a base type. Every type extends from this common type and shares the defined properties",
      "type": "object",
      "properties": {
        "description": {
          "description": "General description of this type, should not contain any new lines.",
          "type": "string"
        },
        "type": {
          "description": "Type of the property",
          "type": "string"
        },
        "nullable": {
          "description": "Indicates whether it is possible to use a null value",
          "type": "boolean"
        },
        "deprecated": {
          "description": "Indicates whether this type is deprecated",
          "type": "boolean"
        },
        "readonly": {
          "description": "Indicates whether this type is readonly",
          "type": "boolean"
        }
      }
    },
    "Discriminator": {
      "description": "Adds support for polymorphism. The discriminator is an object name that is used to differentiate between other schemas which may satisfy the payload description",
      "type": "object",
      "properties": {
        "propertyName": {
          "description": "The name of the property in the payload that will hold the discriminator value",
          "type": "string"
        },
        "mapping": {
          "description": "An object to hold mappings between payload values and schema names or references",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GenericType": {
      "description": "Represents a generic type. A generic type can be used i.e. at a map or array which then can be replaced on reference via the $template keyword",
      "type": "object",
      "properties": {
        "$generic": {
          "description": "",
          "type": "string"
        }
      }
    },
    "IntersectionType": {
      "description": "Represents an intersection type",
      "type": "object",
      "properties": {
        "description": {
          "description": "",
          "type": "string"
        },
        "allOf": {
          "description": "Contains an array of references. The reference must only point to a struct type",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceType"
          }
        }
      }
    },
    "MapType": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonType"
        },
        {
          "description": "Represents a map type. A map type contains variable key value entries of a specific type",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "additionalProperties": {
              "description": "",
              "oneOf": [
                {
                  "$ref": "#/definitions/BooleanType"
                },
                {
                  "$ref": "#/definitions/NumberType"
                },
                {
                  "$ref": "#/definitions/StringType"
                },
                {
                  "$ref": "#/definitions/ArrayType"
                },
                {
                  "$ref": "#/definitions/UnionType"
                },
                {
                  "$ref": "#/definitions/IntersectionType"
                },
                {
                  "$ref": "#/definitions/ReferenceType"
                },
                {
                  "$ref": "#/definitions/GenericType"
                },
                {
                  "$ref": "#/definitions/AnyType"
                }
              ]
            },
            "maxProperties": {
              "description": "Positive integer value",
              "type": "integer"
            },
            "minProperties": {
              "description": "Positive integer value",
              "type": "integer"
            }
          }
        }
      ]
    },
    "NumberType": {
      "allOf": [
        {
          "$ref": "#/definitions/ScalarType"
        },
        {
          "description": "Represents a number type (contains also integer)",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "multipleOf": {
              "description": "",
              "type": "number",
              "minimum": 0
            },
            "maximum": {
              "description": "",
              "type": "number"
            },
            "exclusiveMaximum": {
              "description": "",
              "type": "boolean"
            },
            "minimum": {
              "description": "",
              "type": "number"
            },
            "exclusiveMinimum": {
              "description": "",
              "type": "boolean"
            }
          }
        }
      ]
    },
    "ReferenceType": {
      "description": "Represents a reference type. A reference type points to a specific type at the definitions map",
      "type": "object",
      "properties": {
        "$ref": {
          "description": "Reference to a type under the definitions map",
          "type": "string"
        },
        "$template": {
          "description": "Optional concrete type definitions which replace generic template types",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ScalarType": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonType"
        },
        {
          "description": "Represents a scalar type",
          "type": "object",
          "properties": {
            "format": {
              "description": "Describes the specific format of this type i.e. date-time or int64",
              "type": "string"
            },
            "enum": {
              "description": "",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            },
            "default": {
              "description": "",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          }
        }
      ]
    },
    "StringType": {
      "allOf": [
        {
          "$ref": "#/definitions/ScalarType"
        },
        {
          "description": "Represents a string type",
          "type": "object",
          "properties": {
            "type": {
              "description": "",
              "type": "string"
            },
            "maxLength": {
              "description": "Positive integer value",
              "type": "integer",
              "minimum": 0
            },
            "minLength": {
              "description": "Positive integer value",
              "type": "integer",
              "minimum": 0
            },
            "pattern": {
              "description": "",
              "type": "string"
            }
          }
        }
      ]
    },
    "StructType": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonType"
        },
        {
          "description": "Represents a struct type. A struct type contains a fix set of defined properties",
          "type": "object",
          "properties": {
            "$final": {
              "description": "Indicates that a struct is final, this means it is not possible to extend this struct",
              "type": "boolean"
            },
            "$extends": {
              "description": "Extends an existing type with the referenced type",
              "type": "string"
            },
            "type": {
              "description": "",
              "type": "string"
            },
            "properties": {
              "description": "",
              "type": "object",
              "additionalProperties": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/MapType"
                  },
                  {
                    "$ref": "#/definitions/ArrayType"
                  },
                  {
                    "$ref": "#/definitions/BooleanType"
                  },
                  {
                    "$ref": "#/definitions/NumberType"
                  },
                  {
                    "$ref": "#/definitions/StringType"
                  },
                  {
                    "$ref": "#/definitions/AnyType"
                  },
                  {
                    "$ref": "#/definitions/IntersectionType"
                  },
                  {
                    "$ref": "#/definitions/UnionType"
                  },
                  {
                    "$ref": "#/definitions/ReferenceType"
                  },
                  {
                    "$ref": "#/definitions/GenericType"
                  }
                ]
              }
            },
            "required": {
              "description": "",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "TypeSchema": {
      "description": "The root TypeSchema",
      "type": "object",
      "properties": {
        "$import": {
          "description": "Contains external definitions which are imported. The imported schemas can be used via the namespace i.e. 'my_namespace:my_type'",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "definitions": {
          "description": "",
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/StructType"
              },
              {
                "$ref": "#/definitions/MapType"
              },
              {
                "$ref": "#/definitions/ReferenceType"
              }
            ]
          }
        },
        "$ref": {
          "description": "Reference to a root schema under the definitions key",
          "type": "string"
        }
      }
    },
    "UnionType": {
      "description": "Represents an union type. An union type can contain one of the provided types",
      "type": "object",
      "properties": {
        "description": {
          "description": "",
          "type": "string"
        },
        "discriminator": {
          "$ref": "#/definitions/Discriminator"
        },
        "oneOf": {
          "description": "Contains an array of references. The reference must only point to a struct type",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/NumberType"
              },
              {
                "$ref": "#/definitions/StringType"
              },
              {
                "$ref": "#/definitions/BooleanType"
              },
              {
                "$ref": "#/definitions/ReferenceType"
              }
            ]
          }
        }
      }
    }
  }
}